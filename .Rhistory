# ------------------------------- Package Setup --------------------------------
#packs <- c('ggplot2', 'tidyverse', 'metagenomeSeq', 'plyr')
packages <- c('tidyverse', 'vegan', 'modules')
lapply(packages, library, character.only = TRUE)
setwd("~/GitHub/R_analyses")
setwd("~/GitHub/R_analyses")
# ------------------------------- Package Setup --------------------------------
#packs <- c('ggplot2', 'tidyverse', 'metagenomeSeq', 'plyr')
packages <- c('tidyverse', 'vegan', 'modules')
lapply(packages, library, character.only = TRUE)
# ------------------------- Load Aux Files as Modules --------------------------
scaling <- use('scripts/reads_scaling.R')
# ---------------------------------- Globals -----------------------------------
# Input file paths:
# Counts table (clade and taxon counts, uncollapsed)
counts_path <- "data/all_clade_and_taxon_reads.tsv"
# ---------------------------------- Globals -----------------------------------
# Input file paths:
# Counts table (clade and taxon counts, uncollapsed)
counts_path <- "data/all_clade_and_taxon_reads.tsv"
# -------------------------------- Read Input ----------------------------------
# Read in count table
ct <- read_tsv(counts_path)
View(ct)
?install.packages
View(ct)
tb <- ct
View(tb)
View(tb)
# Remove the "Max" columns
tb <- tb[, !(colnames(tb) %in% c("Max", "Max.1"))]
View(tb)
c('lists', 'list2')
View(ct)
View(tb)
# Taxa name formatting
tb$name <- gsub(".*<wbr>(.*)", "\\1", tb$name)
View(ct)
# Lineage formatting
tb$lineage <- gsub("&nbsp;", " ", tb$lineage)
tb <-  tb %>%
mutate(lineage = case_when(
name == 'cellular organisms' ~ 'cellular organisms',
TRUE ~ str_c(lineage, name, sep = ">")))
?select
?c
?select
# Remove clade read columns
tb %>% select(-contains("cladeReads"))
# Format and perform filtering on the table
ct_formatted <- scaling$format_count_table(ct)
View(ct_formatted)
# Format and perform filtering on the table
ct <- scaling$format_count_table(ct) %>%
scaling$filter_table()
View(ct)
View(scaling)
# -------------------- Formatting, Filtering, and Scaling ----------------------
ct_formatted <- scaling$format_count_table(ct)
View(ct_formatted)
ct_filtered <- filter(tb, str_detect(lineage, 'Bacteria'))
?filter
View(ct)
ct_formatted$lineage
View(ct)
ct_filtered <- filter(ct_formatted, str_detect(taxRank, 'G'))
View(ct_filtered)
ct_filtered <- filter(ct_formatted, str_detect(lineage, 'Bacteria'))
# -------------------- Formatting, Filtering, and Scaling ----------------------
ct_formatted <- scaling$format_count_table(ct)
# -------------------------------- Read Input ----------------------------------
# Read in count table
ct <- read_tsv(counts_path)
# -------------------- Formatting, Filtering, and Scaling ----------------------
ct_formatted <- scaling$format_count_table(ct)
View(ct_formatted)
ct_filtered <- filter(ct_formatted, str_detect(lineage, 'Bacteria'))
View(ct_filtered)
View(ct)
View(ct)
